buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "io.spring.gradle:dependency-management-plugin:$spring_dependency_management_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "com.bmuschko:gradle-docker-plugin:$gradle_docker_plugin_version"
    }
}


import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

group "io.search.base"

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"
apply plugin: "com.bmuschko.docker-remote-api"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-data-elasticsearch"
    compile "org.springframework.boot:spring-boot-starter-jetty"
    compile "org.elasticsearch.client:transport"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin"

    testCompile "org.springframework.boot:spring-boot-starter-test"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task buildDockerImage(type: DockerBuildImage) {
    inputDir.set(file(projectDir))
    tags.set([project.name])
    dependsOn build
}


